name: staging-deploy

on:

  push:

    branches:

      - "staging"

  workflow_dispatch:

jobs:

  deploy:

    if: ${{ github.event_name == 'workflow_dispatch' }}

    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repo

        uses: actions/checkout@master

      # - name: Install Dependencies

      #   run: npm install

      # - name: Build

      #   run: npm run build

      #   env:
      #     CI: false

      #     REACT_APP_NODE_ENV: staging

      - name: Configure AWS Credentials

        uses: aws-actions/configure-aws-credentials@v1

        with:

          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}

          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          aws-region: ${{ secrets.AWS_REGION }}
name: react-ci-cd-demo

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Build React App
        run: npm install && npm run build
      - name: Deploy app build to S3 bucket
        run: aws s3 sync public s3://reactcicidbuck --delete


      - name: Copy files to the AWS S3 bucket

        run: |

          aws s3 sync --acl public-read --delete build s3://${{ secrets.S3_BUCKET_NAME }}

      - name: Invalidate cloudfront distribution

        run: |

          aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths '/*'

          echo "DEPLOYED SUCCESSFULLY"
